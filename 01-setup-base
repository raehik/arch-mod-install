#!/bin/bash

# basic Arch install script
# by raehik
# 28/05/14

boot_part=/dev/sda1
lvm_part=/dev/sda2
vg_name=main
temp_drop_shell=/usr/bin/zsh
new_hostname=str1
base_pkgs="base openssh vim"
timezone="/usr/share/zoneinfo/Europe/London"
net_prof_name=def-static
net_prof="\
Description='A basic static ethernet connection'
Interface=enp11s0
Connection=ethernet
IP=static
Address=('192.168.1.41/24')
Gateway='192.168.1.1'
DNS=('8.8.8.8' '8.8.4.4')"

prompt_yn() {
    printf ""${1}" (default $2):\t"
    while :
    do
        read yn
        if [ "$yn" = "y" ] || [ "$yn" = "yes" ]; then
            temp_yn=1
            break
        elif [ "$yn" = "n" ] || [ "$yn" = "no" ]; then
            temp_yn=0
            break
        elif [ -z "$yn" ]; then
            temp_yn=$2
            break
        else
            printf "Please enter 'yes' or 'no':\t\t"
        fi
    done
}

pause_cont() {
    echo "(press Enter to continue)"
    read dummy_var
}

echo "\
please change the root password so that no one else can SSH in during
installation. make sure it's reasonably secure."
#passwd
echo "\
current variables (Ctrl-C and change in script to alter):
boot partition: $boot_part
LVM partition: $lvm_part
Volume Group name: $vg_name
shell to drop to: $temp_drop_shell
hostname: $new_hostname
base packages: $base_pkgs
timezone: $timezone
network profile name: $net_prof_name
network profile: (see script)"
prompt_yn "configure & mount partitions? (follows first script)" 1
bool_config_parts=$temp_yn

if [ $bool_config_parts = 1 ]; then
    echo "removing VG '$vg_name'..."
    vgremove $vg_name
    echo "removing PV on '$lvm_part'..."
    pvremove $lvm_part
    echo "creating PV on '$lvm_part'..."
    pvcreate $lvm_part
    echo "creating VG '$lvm_part'..."
    vgcreate $vg_name $lvm_part
    echo "creating LVs..."
    lvcreate -L 100G $vg_name --name root
    lvcreate -L 50G $vg_name --name var
    lvcreate -L 3G $vg_name --name home

    echo "creating filesystems..."
    mkfs.ext4 $boot_part
    mkfs.ext4 /dev/mapper/${vg_name}-root
    mkfs.ext4 /dev/mapper/${vg_name}-var
    mkfs.ext4 /dev/mapper/${vg_name}-home

    echo "mounting partitions..."
    mount /dev/mapper${vg_name}-root
    mkdir /mnt/boot /mnt/var /mnt/home
    mount ${boot_part} /mnt/boot
    mount /dev/mapper/${vg_name}-var /mnt/var
    mount /dev/mapper/${vg_name}-home /mnt/home
else
    echo "dropping you to $temp_drop_shell"
    echo "do what you want, type exit when finished & mounted"
    pause_cont
    echo "done, back in script."
fi

echo "preparing to install main base..."
echo "\
configure the package mirror list as required. suggest some UK and Germany
servers at the top (just move 1 or 2 total)."
pause_cont
vi /etc/pacman.d/mirrorlist
echo "running pacstrap with packages '"${base_pkgs}"'..."
echo "generating fstab..."
genfstab -U -p /mnt >> /mnt/etc/fstab
echo "catting rest of script into a file in the system..."
echo '#!/bin/bash

full script here
like really, it is fine' > /mnt/keep-going
echo "arch-chrooting into new system and running script..."
arch-chroot /mnt /bin/bash /keep-going
